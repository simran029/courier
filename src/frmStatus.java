
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Date;
import java.util.Properties;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Simran
 */
public class frmStatus extends javax.swing.JFrame {

    /**
     * Creates new form frmStatus
     */
     private JDatePickerImpl datePicker,datePicker1,datePicker2;
    JDatePanelImpl datePanel,datePanel1,datePanel2 ;
     UtilDateModel model,model1,model2;
     Properties p;
    public frmStatus() {
        model = new UtilDateModel();
         model1 = new UtilDateModel();
         model2 = new UtilDateModel();
 p = new Properties();
p.put("text.today", "Today");
p.put("text.month", "Month");
p.put("text.year", "Year");
 datePanel = new JDatePanelImpl(model, p);
 datePanel1 = new JDatePanelImpl(model1, p);
 datePanel2 = new JDatePanelImpl(model2, p);
  datePicker = new JDatePickerImpl(datePanel, new DateLabelFormatter());
 datePicker.setBounds(170,70,150,30);
 datePicker1 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());
 datePicker1.setBounds(510,30,120,30);
 datePicker2 = new JDatePickerImpl(datePanel2, new DateLabelFormatter());
 datePicker2.setBounds(660,30,120,30);
 add(datePicker);
 add(datePicker1);
 add(datePicker2);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAWB = new javax.swing.JTextField();
        txtTotWeight = new javax.swing.JTextField();
        txtForAWB = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbCountry = new javax.swing.JComboBox<>();
        cmbThru = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtZone = new javax.swing.JTextField();
        cmbClientName = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbWeightGrp = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPcs = new javax.swing.JTextField();
        txtRateWeightGrp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtConsignee = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cmbClient = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel6.setText("DESTINATION");

        jLabel7.setText("THRU");

        txtForAWB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtForAWBActionPerformed(evt);
            }
        });

        jLabel8.setText("Total Weight");

        cmbCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCountryItemStateChanged(evt);
            }
        });

        cmbThru.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DHL", "FEDEX" }));

        jLabel9.setText("Country Zone");

        cmbClientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientNameActionPerformed(evt);
            }
        });

        jLabel1.setText("ClientName");

        jLabel2.setText("Date ");

        jLabel3.setText("Weight Group");

        jLabel4.setText("AWB NO.");

        jLabel5.setText("FORW AWB");

        jLabel10.setText("No. of pieces");

        jLabel11.setText("Rate Weight grp");

        jLabel12.setText("Amount");

        jLabel13.setText("Consignee");

        jButton2.setText("Approve");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel21.setText("To");

        jLabel22.setText("ClientName");

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel20.setText("From");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(61, 61, 61)
                                    .addComponent(txtConsignee, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(111, 111, 111)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                        .addComponent(txtRateWeightGrp)
                                        .addComponent(txtPcs)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(111, 111, 111)
                                    .addComponent(txtZone, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(57, 57, 57)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTotWeight)
                                            .addComponent(txtForAWB, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtAWB, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbWeightGrp, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbThru, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(145, 145, 145)
                                .addComponent(jLabel21)
                                .addGap(139, 139, 139)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbClient, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(cmbClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbWeightGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtAWB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtForAWB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtTotWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cmbThru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtPcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtRateWeightGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtConsignee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     void fillDailyEntry(int clientId,Date from,Date to)
    {
           try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
Vector<String> columnNames = new Vector<String>();
ResultSet rs=stmt.executeQuery("select * from DailyEntry where clientId="+clientId+" and TO_CHAR(RateDate,'YYYY-MM-DD')>='"+from+"' and TO_CHAR(RateDate,'YYYY-MM-DD')<='"+to+"' and status='new'");  
// String[] columnNames = {"ZoneId","Country", "Zone"};
 
  if (rs != null) {
        ResultSetMetaData columns = rs.getMetaData();
        int i = 0;
        while (i < columns.getColumnCount()) {
          i++;
        //  System.out.print(columns.getColumnName(i) + "\t");
          columnNames.add(columns.getColumnName(i));
        }
        System.out.print("\n");
  }
  DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        jTable1.setModel(model);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setFillsViewportHeight(true);
        int DailyEntryId,TOTWEIGHT,PCS,CLIENTID,RATEWG,AMOUNT;
        String WeightGroup;
        String AWB,FORAWB,THRU,DESTINATION,ZONE,CONSIGNEE;
        Date RateDate;
        while(rs.next()) 
        {
           DailyEntryId = rs.getInt("DAILYENTRYId");
                AWB = rs.getString("AWBNO");
                FORAWB = rs.getString("FORWAWB");
                THRU = rs.getString("THRU");
                DESTINATION = rs.getString("DESTINATION");
                ZONE = rs.getString("ZONE");
                TOTWEIGHT = rs.getInt("TOTalWEIGHT");
                PCS = rs.getInt("PCS");
                CLIENTID = rs.getInt("CLIENTID");
                 WeightGroup = rs.getString("WEIGHTGRP");
                RATEWG = rs.getInt("RATEWeightGrp");
                AMOUNT = rs.getInt("AMOUNT");
                CONSIGNEE=rs.getString("CONSIGNEE");
                RateDate = rs.getDate("RateDate");
               model.addRow(new Object[]{DailyEntryId,AWB,FORAWB,THRU,DESTINATION,ZONE,TOTWEIGHT,PCS,CLIENTID,WeightGroup,RATEWG,AMOUNT,CONSIGNEE,RateDate});
        
        }
    }
    catch(Exception e){ System.out.println(e);}       
    }
    private void txtForAWBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtForAWBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtForAWBActionPerformed

    private void cmbCountryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCountryItemStateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cmbCountryItemStateChanged

     int getClientID(String ClientName)
    {
        int cid=0;
    try{  
//step1 load the driver class  
Class.forName("oracle.jdbc.driver.OracleDriver");  
  
//step2 create  the connection object  
Connection con=DriverManager.getConnection(  
"jdbc:oracle:thin:@localhost:1521:xe","simran","12345");  
//step3 create the statement object  
Statement stmt=con.createStatement();  
//step4 execute query  
ResultSet rs=stmt.executeQuery("select ClientId from Client where FirmName ='"+ClientName+"'");  
if(rs.next()) 
{
    cid = rs.getInt("ClientId");
     
}
    }
    catch(Exception e){ System.out.println(e);}       
         
         return(cid);
    }
     
      void FillClients1()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
     ResultSet rs=stmt.executeQuery("select * from Client order by FirmName");  
     cmbClient.removeAllItems();
     cmbClient.addItem("Select Clients");
     while(rs.next())
     {
         String FirmName= rs.getString("FirmName");
     cmbClient.addItem(FirmName);
     }
     
    }
   
    catch(Exception e){ System.out.println(e);}       
    }
      
       void FillClients()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
     ResultSet rs=stmt.executeQuery("select * from Client order by FirmName");  
     cmbClientName.removeAllItems();
     cmbClientName.addItem("Select Clients");
     while(rs.next())
     {
         String FirmName= rs.getString("FirmName");
     cmbClientName.addItem(FirmName);
     }
     
    }
   
    catch(Exception e){ System.out.println(e);}       
    } 
        void FillCountry()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query 
     ResultSet rs=stmt.executeQuery("select * from CountryZone order by Country");  
    cmbCountry.removeAllItems();
     cmbCountry.addItem("Select Country");
     if(rs!=null)
     {
     while(rs.next())
     {
         String Country= rs.getString("Country");
     cmbCountry.addItem(Country);
     }
     
    }
        }
    catch(Exception e){ 
       System.out.println(e);
       }       
    } 
     void FillWeightGroup()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
     ResultSet rs=stmt.executeQuery("select * from WeightGroup order by GroupId");  
     cmbWeightGrp.removeAllItems();
     cmbWeightGrp.addItem("Select Weight Group");
     while(rs.next())
     {
         String WeightGrp= rs.getString("WEIGHT");
     cmbWeightGrp.addItem(WeightGrp);
     }
     
    }
   
    catch(Exception e){ System.out.println(e);}       
    }
    private void cmbClientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClientNameActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
DefaultTableModel model3=(DefaultTableModel)jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        String dailyId=model3.getValueAt(selectedRow,0).toString();
        int id=Integer.parseInt(dailyId);
       try
       {
       Connection con=OracleConnection.getConnection();
       PreparedStatement stmt=con.prepareStatement("update dailyentry set status='approved' where dailyentryid="+id+"");
      int j=stmt.executeUpdate();
       if(j>0)
       {
       JOptionPane.showMessageDialog(this,"daily entry updated");
       }
       }
       catch(Exception e)
       {
       System.out.println(e);
       }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(!cmbClient.getSelectedItem().toString().contains("select"))
        {
            String client=cmbClient.getSelectedItem().toString();
            int clientId=getClientID(client);
            Date jStartDate =  (Date) datePicker1.getModel().getValue() ; //your "java" date object
            java.sql.Date from = new java.sql.Date(jStartDate.getTime());
            Date jStartDate1 =  (Date) datePicker2.getModel().getValue() ; //your "java" date object
            java.sql.Date to = new java.sql.Date(jStartDate1.getTime());
            fillDailyEntry(clientId,from,to);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here: void FillClients1()
        FillClients1();
        FillClients();
        FillWeightGroup();
        FillCountry();
    
    }//GEN-LAST:event_formWindowOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         DefaultTableModel model3=(DefaultTableModel)jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        String client="";
        int id=Integer.parseInt(model3.getValueAt(selectedRow,8).toString());
        String zoneId=model3.getValueAt(selectedRow,0).toString();
         Date jStartDate =  (Date) datePicker1.getModel().getValue() ; //your "java" date object
        java.sql.Date date = new java.sql.Date(jStartDate.getTime());
        try
        {
        Connection con=OracleConnection.getConnection();
        Statement stmt=con.createStatement();   
        ResultSet rs=stmt.executeQuery("select firmname from Client where clientid="+id+""); 
   
     if(rs.next())
     {
     client=rs.getString("firmname");
     }
        }
        catch(Exception e)
        {
        System.out.println(e);
        }
       
      try
      {
       Connection con=OracleConnection.getConnection();
       Statement stmt=con.createStatement();
       ResultSet rs=stmt.executeQuery("select ratedate from dailyentry where dailyentryid='"+zoneId+"'");
       if(rs.next())
       {
       date = rs.getDate("ratedate");
       }
          model.setValue(date);
//datePicker.setValue(deadlineDatePrompt.toLocalDate());
      }
      catch(Exception e)
      {
      System.out.println(e);
      }
        cmbClientName.setSelectedItem(client);
        cmbWeightGrp.setSelectedItem(model3.getValueAt(selectedRow,9).toString());
        txtAWB.setText(model3.getValueAt(selectedRow,1).toString());
        txtForAWB.setText(model3.getValueAt(selectedRow,2).toString());
        cmbThru.setSelectedItem(model3.getValueAt(selectedRow,3).toString());
        cmbCountry.setSelectedItem(model3.getValueAt(selectedRow,4).toString());
        txtZone.setText(model3.getValueAt(selectedRow,5).toString());
        txtTotWeight.setText(model3.getValueAt(selectedRow,6).toString());
        txtPcs.setText(model3.getValueAt(selectedRow,7).toString());
        txtRateWeightGrp.setText(model3.getValueAt(selectedRow,10).toString());
        txtAmount.setText(model3.getValueAt(selectedRow,11).toString());
        
    }//GEN-LAST:event_jTable1MouseClicked

                                      
        // TODO add your handling code here:
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbClient;
    private javax.swing.JComboBox<String> cmbClientName;
    private javax.swing.JComboBox<String> cmbCountry;
    private javax.swing.JComboBox<String> cmbThru;
    private javax.swing.JComboBox<String> cmbWeightGrp;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAWB;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtConsignee;
    private javax.swing.JTextField txtForAWB;
    private javax.swing.JTextField txtPcs;
    private javax.swing.JTextField txtRateWeightGrp;
    private javax.swing.JTextField txtTotWeight;
    private javax.swing.JTextField txtZone;
    // End of variables declaration//GEN-END:variables
}
