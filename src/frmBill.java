
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Date;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;
import java.time.LocalDate;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Simran
 */



public class frmBill extends javax.swing.JFrame {

    /**
     * Creates new form frmBill
     */
     private static String FILE = "d:/simran/bill.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
     private JDatePickerImpl datePicker,datePicker1,datePicker2;
    JDatePanelImpl datePanel,datePanel1,datePanel2 ;
     UtilDateModel model,model1,model2;
     Properties p;
     static int amount=0,other=0,DHL=0,FED=0,LNX=0,UPS=0;
    public frmBill() {
         model = new UtilDateModel();
         model1 = new UtilDateModel();
         model2 = new UtilDateModel();
 p = new Properties();
p.put("text.today", "Today");
p.put("text.month", "Month");
p.put("text.year", "Year");
 datePanel = new JDatePanelImpl(model, p);
 datePanel1 = new JDatePanelImpl(model1, p);
 datePanel2 = new JDatePanelImpl(model2, p);
  datePicker = new JDatePickerImpl(datePanel, new DateLabelFormatter());
 datePicker.setBounds(170,70,150,30);
 datePicker1 = new JDatePickerImpl(datePanel1, new DateLabelFormatter());
 datePicker1.setBounds(510,30,120,30);
 datePicker2 = new JDatePickerImpl(datePanel2, new DateLabelFormatter());
 datePicker2.setBounds(660,30,120,30);
 add(datePicker);
 add(datePicker1);
 add(datePicker2);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        cmbClientName = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtFuelUPS = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbWeightGrp = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAWB = new javax.swing.JTextField();
        txtTotWeight = new javax.swing.JTextField();
        txtForAWB = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbCountry = new javax.swing.JComboBox<>();
        cmbThru = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtZone = new javax.swing.JTextField();
        txtPcs = new javax.swing.JTextField();
        txtRateWeightGrp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtOther = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtConsignee2 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtFuelDHL = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtFuelFED = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtFuelLNX = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        txtTotAmount = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cmbClient = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtHrate = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtCrate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtIrate = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtPAmount = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtHamt = new javax.swing.JTextField();
        txtCamt = new javax.swing.JTextField();
        txtIamt = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        txtInvoice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel11.setText("Rate Weight grp");

        cmbClientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientNameActionPerformed(evt);
            }
        });

        jLabel12.setText("Amount");

        jLabel1.setText("ClientName");

        jLabel2.setText("Date ");

        jLabel13.setText("Consignee");

        jLabel3.setText("Weight Group");

        jLabel4.setText("AWB NO.");

        jLabel5.setText("FORW AWB");

        jLabel6.setText("DESTINATION");

        jLabel7.setText("THRU");

        txtForAWB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtForAWBActionPerformed(evt);
            }
        });

        jLabel8.setText("Total Weight");

        cmbCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCountryItemStateChanged(evt);
            }
        });

        cmbThru.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DHL", "FEDEX" }));

        jLabel9.setText("Country Zone");

        txtPcs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPcsActionPerformed(evt);
            }
        });

        jLabel10.setText("No. of pieces");

        jLabel14.setText("Other expenses");

        jLabel15.setText("Other expenses");

        jLabel16.setText("Fuel surcharges DHL");

        jLabel17.setText("Fuel surcharges FED");

        jLabel18.setText("Fuel surcharges LNX");

        jLabel19.setText("Fuel surcharges UPS");

        jButton1.setText("New");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add to Bill");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel20.setText("From");

        jLabel21.setText("To");

        jLabel22.setText("ClientName");

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Print");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel23.setText("Billed Daily Entry");

        jLabel24.setText("Total Amount");

        txtHrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHrateActionPerformed(evt);
            }
        });

        jLabel25.setText("HGST@");

        txtCrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCrateActionPerformed(evt);
            }
        });

        jLabel26.setText("CGST@");

        txtIrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIrateActionPerformed(evt);
            }
        });

        jLabel27.setText("IGST@");

        jLabel28.setText("Payable Amount");

        jButton5.setText("Generate bill");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Print Bill");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel29.setText("Invoice no.");

        txtInvoice.setText("jTextField1");
        txtInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel18)
                                        .addComponent(jLabel19))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel13)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel15)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel9)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPcs, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtRateWeightGrp, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtZone, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtConsignee2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtOther, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtFuelDHL, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtFuelFED, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtFuelLNX, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtFuelUPS, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(77, 77, 77)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel2)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(82, 82, 82)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))))
                            .addGap(35, 35, 35)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAWB, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbThru, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTotWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtForAWB, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbWeightGrp, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(138, 138, 138)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbClient, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel29))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTotAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtHrate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtHamt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCrate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCamt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtIrate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtIamt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtPAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtInvoice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel23)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel20)
                                .addComponent(jLabel21)))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addComponent(cmbClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbWeightGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAWB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtForAWB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(txtInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHamt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCamt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIamt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbThru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txtZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRateWeightGrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtConsignee2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtOther, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFuelDHL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFuelFED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFuelLNX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFuelUPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton5)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(284, 284, 284)
                .addComponent(jLabel14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     int GetBillId()
    {
        int zone=1;
         try{  
//step1 load the driver class  
Class.forName("oracle.jdbc.driver.OracleDriver");  
  
//step2 create  the connection object  
Connection con=DriverManager.getConnection(  
"jdbc:oracle:thin:@localhost:1521:xe","simran","12345");  
//step3 create the statement object  
Statement stmt=con.createStatement();  
//step4 execute query  
ResultSet rs=stmt.executeQuery("select * from bill order by billId  Desc");  
if(rs.next()) 
{
    zone = rs.getInt("BillId");
     zone=zone+1;
}
    }
    catch(Exception e){ System.out.println(e);}       
         
         return(zone);
    }  
    void FillClients1()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
     ResultSet rs=stmt.executeQuery("select * from Client order by FirmName");  
     cmbClient.removeAllItems();
     cmbClient.addItem("Select Clients");
     while(rs.next())
     {
         String FirmName= rs.getString("FirmName");
     cmbClient.addItem(FirmName);
     }
     
    }
   
    catch(Exception e){ System.out.println(e);}       
    } 
   
     void FillClients()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
     ResultSet rs=stmt.executeQuery("select * from Client order by FirmName");  
     cmbClientName.removeAllItems();
     cmbClientName.addItem("Select Clients");
     while(rs.next())
     {
         String FirmName= rs.getString("FirmName");
     cmbClientName.addItem(FirmName);
     }
     
    }
   
    catch(Exception e){ System.out.println(e);}       
    } 
    int getClientID(String ClientName)
    {
        int cid=0;
    try{  
//step1 load the driver class  
Class.forName("oracle.jdbc.driver.OracleDriver");  
  
//step2 create  the connection object  
Connection con=DriverManager.getConnection(  
"jdbc:oracle:thin:@localhost:1521:xe","simran","12345");  
//step3 create the statement object  
Statement stmt=con.createStatement();  
//step4 execute query  
ResultSet rs=stmt.executeQuery("select ClientId from Client where FirmName ='"+ClientName+"'");  
if(rs.next()) 
{
    cid = rs.getInt("ClientId");
     
}
    }
    catch(Exception e){ System.out.println(e);}       
         
         return(cid);
    }
    
     void fillDailyEntry(int clientId,Date from,Date to)
    {
           try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
Vector<String> columnNames = new Vector<String>();
ResultSet rs=stmt.executeQuery("select * from DailyEntry where clientId="+clientId+" and TO_CHAR(RateDate,'YYYY-MM-DD')>='"+from+"' and TO_CHAR(RateDate,'YYYY-MM-DD')<='"+to+"' and status='approved'");  
// String[] columnNames = {"ZoneId","Country", "Zone"};
 
  if (rs != null) {
        ResultSetMetaData columns = rs.getMetaData();
        int i = 0;
        while (i < columns.getColumnCount()) {
          i++;
        //  System.out.print(columns.getColumnName(i) + "\t");
          columnNames.add(columns.getColumnName(i));
        }
        System.out.print("\n");
  }
  DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        jTable1.setModel(model);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setFillsViewportHeight(true);
        int DailyEntryId,TOTWEIGHT,PCS,CLIENTID,RATEWG,AMOUNT;
        String WeightGroup;
        String AWB,FORAWB,THRU,DESTINATION,ZONE,CONSIGNEE;
        Date RateDate;
        while(rs.next()) 
        {
           DailyEntryId = rs.getInt("DAILYENTRYId");
                AWB = rs.getString("AWBNO");
                FORAWB = rs.getString("FORWAWB");
                THRU = rs.getString("THRU");
                DESTINATION = rs.getString("DESTINATION");
                ZONE = rs.getString("ZONE");
                TOTWEIGHT = rs.getInt("TOTalWEIGHT");
                PCS = rs.getInt("PCS");
                CLIENTID = rs.getInt("CLIENTID");
                 WeightGroup = rs.getString("WEIGHTGRP");
                RATEWG = rs.getInt("RATEWeightGrp");
                AMOUNT = rs.getInt("AMOUNT");
                CONSIGNEE=rs.getString("CONSIGNEE");
                RateDate = rs.getDate("RateDate");
               model.addRow(new Object[]{DailyEntryId,AWB,FORAWB,THRU,DESTINATION,ZONE,TOTWEIGHT,PCS,CLIENTID,WeightGroup,RATEWG,AMOUNT,CONSIGNEE,RateDate});
        
        }
    }
    catch(Exception e){ System.out.println(e);}       
    }
      
      
    void FillCountry()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query 
     ResultSet rs=stmt.executeQuery("select * from CountryZone order by Country");  
    cmbCountry.removeAllItems();
     cmbCountry.addItem("Select Country");
     if(rs!=null)
     {
     while(rs.next())
     {
         String Country= rs.getString("Country");
     cmbCountry.addItem(Country);
     }
     
    }
        }
    catch(Exception e){ 
       System.out.println(e);
       }       
    } 
     void FillWeightGroup()
    {
       try
        {
    Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
     ResultSet rs=stmt.executeQuery("select * from WeightGroup order by GroupId");  
     cmbWeightGrp.removeAllItems();
     cmbWeightGrp.addItem("Select Weight Group");
     while(rs.next())
     {
         String WeightGrp= rs.getString("WEIGHT");
     cmbWeightGrp.addItem(WeightGrp);
     }
     
    }
   
    catch(Exception e){ System.out.println(e);}       
    } 
   public void Disable()
    {
    txtAWB.setEnabled(false);
    txtForAWB.setEnabled(false);
    txtTotWeight.setEnabled(false);
    txtZone.setEnabled(false);
    txtPcs.setEnabled(false);
    txtRateWeightGrp.setEnabled(false);
    txtAmount.setEnabled(false);
    txtConsignee2.setEnabled(false);
    txtOther.setEnabled(false);
    txtFuelDHL.setEnabled(false);
    txtFuelFED.setEnabled(false);
    txtFuelLNX.setEnabled(false);
    txtFuelUPS.setEnabled(false);
    cmbClientName.setEnabled(false);
    cmbCountry.setEnabled(false);
    cmbThru.setEnabled(false);
    cmbWeightGrp.setEnabled(false);
    }
    
     void Enable()
    {
    txtAWB.setEnabled(true);
    txtForAWB.setEnabled(true);
    txtTotWeight.setEnabled(true);
    txtZone.setEnabled(true);
    txtPcs.setEnabled(true);
    txtRateWeightGrp.setEnabled(true);
    txtAmount.setEnabled(true);
    txtConsignee2.setEnabled(true);
    txtOther.setEnabled(true);
    txtFuelDHL.setEnabled(true);
    txtFuelFED.setEnabled(true);
    txtFuelLNX.setEnabled(true);
    txtFuelUPS.setEnabled(true);
    cmbClientName.setEnabled(true);
    cmbCountry.setEnabled(true);
    cmbThru.setEnabled(true);
    cmbWeightGrp.setEnabled(true);
    }
     int GetInvoiceNo()
    {
        int id=1;
         try{  
//step1 load the driver class  
Class.forName("oracle.jdbc.driver.OracleDriver");  
  
//step2 create  the connection object  
Connection con=DriverManager.getConnection(  
"jdbc:oracle:thin:@localhost:1521:xe","simran","12345");  
//step3 create the statement object  
Statement stmt=con.createStatement();  
//step4 execute query  
ResultSet rs=stmt.executeQuery("select * from invoice order by invoiceno  Desc");  
if(rs.next()) 
{
    id = rs.getInt("invoiceno");
     id=id+1;
}
    }
    catch(Exception e){ System.out.println(e);}       
         
         return(id);

    }
     
      public void createPdf(String dest,int invoiceNo) throws DocumentException {
             
         try
         {
        
        Font smallfont = new Font(Font.FontFamily.HELVETICA, 10);
        Document document = new Document(PageSize.A4, 5, 5, 5, 5);
        PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(dest));
        document.open();
        //PdfPTable table = new PdfPTable(2);
        
        PdfContentByte cb = writer.getDirectContent();
       Connection con=OracleConnection.getConnection();
    Statement stmt=con.createStatement();  
//step4 execute query  
Vector<String> columnNames = new Vector<String>();
ResultSet rs=stmt.executeQuery("select * from bill,invoice where bill.invoiceno=invoice.invoiceno and bill.invoiceNo="+invoiceNo+"");  
// String[] columnNames = {"ZoneId","Country", "Zone"};
 
  if (rs != null) {
        ResultSetMetaData columns = rs.getMetaData();
    
  
      PdfPTable table = new PdfPTable(columns.getColumnCount());
       table.setTotalWidth(PageSize.A4.getWidth());
        table.setLockedWidth(true);
      int k=1;
      while(k<=columns.getColumnCount())
      {
        PdfPCell c1 = new PdfPCell(new Phrase(columns.getColumnName(k)));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        k++;
      }
    
        table.setHeaderRows(1);
        while(rs.next()) 
        {        
        table.addCell(String.valueOf(rs.getInt("billId")));
        table.addCell(String.valueOf(rs.getInt("transId")));
        table.addCell(String.valueOf(rs.getInt("invoiceno")));
        table.addCell(String.valueOf(rs.getString("shipper")));
        table.addCell(String.valueOf(rs.getInt("adlawb")));
        table.addCell(String.valueOf(rs.getString("country")));
        table.addCell(String.valueOf(rs.getString("consignee")));
        table.addCell(String.valueOf(rs.getInt("pieces")));
        table.addCell(String.valueOf(rs.getString("weight")));        
        table.addCell(String.valueOf(rs.getInt("amount")));
        table.addCell(String.valueOf(rs.getInt("miscCharges")));
        table.addCell(String.valueOf(rs.getInt("fuelchargedhl")));
        table.addCell(String.valueOf(rs.getInt("fuelchargefed")));
        table.addCell(String.valueOf(rs.getInt("fuelchargelnx")));
        table.addCell(String.valueOf(rs.getInt("fuelchargeups")));
        table.addCell(String.valueOf(rs.getInt("clientId")));
        table.addCell(String.valueOf(rs.getInt("accountno")));
        table.addCell(String.valueOf(rs.getDate("invoicedate")));
        table.addCell(String.valueOf(rs.getInt("TOTALMISCCHARGE")));
        table.addCell(String.valueOf(rs.getInt("TOTALAMOUNT")));
        table.addCell(String.valueOf(rs.getInt("TOTFUELCHARGEDHL")));
        table.addCell(String.valueOf(rs.getInt("TOTFUELCHARGEFED")));
        table.addCell(String.valueOf(rs.getInt("TOTFUELCHARGELNX")));
        table.addCell(String.valueOf(rs.getInt("TOTFUELCHARGEUPS")));
        table.addCell(String.valueOf(rs.getInt("TOTALAMOUNTCHARGES")));
        table.addCell(String.valueOf(rs.getInt("HGSTRATE")));
        table.addCell(String.valueOf(rs.getInt("HGSTAMOUNT")));
        table.addCell(String.valueOf(rs.getInt("CGSTRATE")));
        table.addCell(String.valueOf(rs.getInt("CGSTAMOUNT")));
        table.addCell(String.valueOf(rs.getInt("IGSTRATE")));
        table.addCell(String.valueOf(rs.getInt("IGSTAMOUNT")));
        table.addCell(String.valueOf(rs.getInt("PAYABLEAMOUNT")));
        table.addCell(String.valueOf(rs.getString("PAYABLEAMOUNTTXT")));
       
        }
        Paragraph subPara = new Paragraph("From", subFont);
        String Client="ADL WorldWide";
        String Address="21 New Ram Nagar Panipat";
        String Email="sushilsaini04@gmail.com";
        String Phone="(9896470047";
        subPara.add(new Paragraph(Client));
        subPara.add(new Paragraph(Address));
        subPara.add(new Paragraph(Email));
        subPara.add(new Paragraph(Phone));
        Paragraph subParaTo = new Paragraph("To", subFont);
        String Client1="Saini Technologies";
        String Address1="21 New Ram Nagar Panipat";
        String Email1="sushilsaini04@gmail.com";
        String Phone1="(9896470047";
        subParaTo.add(new Paragraph(Client));
        subParaTo.add(new Paragraph(Address));
        subParaTo.add(new Paragraph(Email));
        subParaTo.add(new Paragraph(Phone));
         document.add(subPara);
         document.add(subParaTo);
         document.add(table);
        document.close();
  }
         }
          catch(Exception e){ System.out.println(e);}   
    }
    private void cmbClientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClientNameActionPerformed

    private void txtForAWBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtForAWBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtForAWBActionPerformed

    private void cmbCountryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCountryItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbCountryItemStateChanged

    private void txtPcsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPcsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPcsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model3=(DefaultTableModel)jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        String zoneId=model3.getValueAt(selectedRow,0).toString();
        int transId=Integer.parseInt(zoneId);
        try{  
            Connection con=OracleConnection.getConnection();
        int BillId =GetBillId() ;
  int no=Integer.parseInt(txtInvoice.getText());
     Date jStartDate =  (Date) datePicker.getModel().getValue() ; //your "java" date object
     java.sql.Date startDate = new java.sql.Date(jStartDate.getTime());
  if(con!=null)
  {
PreparedStatement stmt=con.prepareStatement("Insert into bill values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");  
stmt.setInt(1,BillId);//1 specifies the first parameter in the query  
stmt.setInt(2,transId);  
stmt.setInt(3,no);    
stmt.setString(4,cmbClientName.getSelectedItem().toString());    
stmt.setString(5,txtAWB.getText());    
stmt.setString(6,cmbCountry.getSelectedItem().toString());    
stmt.setString(7,txtConsignee2.getText());    
stmt.setInt(8,Integer.parseInt(txtPcs.getText()));    
stmt.setInt(9,Integer.parseInt(txtTotWeight.getText()));    
stmt.setInt(10,Integer.parseInt(txtAmount.getText()));    
stmt.setInt(11,Integer.parseInt(txtOther.getText()));   
stmt.setInt(12,Integer.parseInt(txtFuelDHL.getText()));
stmt.setInt(13,Integer.parseInt(txtFuelFED.getText()));
stmt.setInt(14,Integer.parseInt(txtFuelLNX.getText()));
stmt.setInt(15,Integer.parseInt(txtFuelUPS.getText()));
   

int i=stmt.executeUpdate();  
if(i>0)
{
JOptionPane.showMessageDialog(rootPane,"bill Add Sucessfully");
amount+=Integer.parseInt(txtAmount.getText())+Integer.parseInt(txtOther.getText())+Integer.parseInt(txtFuelDHL.getText())+Integer.parseInt(txtFuelFED.getText())+Integer.parseInt(txtFuelLNX.getText())+Integer.parseInt(txtFuelUPS.getText());
other+=Integer.parseInt(txtOther.getText());
DHL+=Integer.parseInt(txtFuelDHL.getText());
FED+=Integer.parseInt(txtFuelFED.getText());
LNX+=Integer.parseInt(txtFuelLNX.getText());
UPS+=Integer.parseInt(txtFuelUPS.getText());
txtTotAmount.setText(String.valueOf(amount));
}
}
  else
  {
  JOptionPane.showMessageDialog(rootPane,"bill Already exists");
  }
        }
        
    catch(Exception e){ System.out.println(e);}  
       try
       {
       Connection con=OracleConnection.getConnection();
       PreparedStatement stmt=con.prepareStatement("update dailyentry set status ='build' where dailyEntryId="+transId+"");
       int j=stmt.executeUpdate();
       if(j>0)
       {
       System.out.println("daily entry status build");
       }
       }
       catch(Exception e){ System.out.println(e+"blah");} 
       
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        int pAmount=amount+Integer.parseInt(txtHamt.getText())+Integer.parseInt(txtCamt.getText())+Integer.parseInt(txtIamt.getText());
        txtPAmount.setText(String.valueOf(pAmount));
        int invoiceno=GetInvoiceNo();
        int id=getClientID(cmbClientName.getSelectedItem().toString());
        Date jStartDate = new Date() ; //your "java" date object
        java.sql.Date startDate = new java.sql.Date(jStartDate.getTime());
        int number=Integer.parseInt(txtPAmount.getText());
        String text=EnglishNumberToWords.convert(number);
        try
        {
        Connection con=OracleConnection.getConnection();
        PreparedStatement stmt=con.prepareStatement("insert into invoice values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
        stmt.setInt(1,invoiceno);
        stmt.setInt(2,id);
        stmt.setInt(3,600694321);
        stmt.setDate(4,startDate);
        stmt.setInt(5,other);
        stmt.setInt(6,Integer.parseInt(txtAmount.getText()));
        stmt.setInt(7,DHL);
        stmt.setInt(8,FED);
        stmt.setInt(9,LNX);
        stmt.setInt(10,UPS);
        stmt.setInt(11,amount);
        stmt.setInt(12,Integer.parseInt(txtHrate.getText()));
        stmt.setInt(13,Integer.parseInt(txtHamt.getText()));
        stmt.setInt(14,Integer.parseInt(txtCrate.getText()));
        stmt.setInt(15,Integer.parseInt(txtCamt.getText()));
        stmt.setInt(16,Integer.parseInt(txtIrate.getText()));
        stmt.setInt(17,Integer.parseInt(txtIamt.getText()));
        stmt.setInt(18,Integer.parseInt(txtPAmount.getText()));
        stmt.setString(19,text);
        int h=stmt.executeUpdate();
        if(h>0)
        {
        JOptionPane.showMessageDialog(this,"bill generated");
        }
        }
        catch(Exception e)
        {
        System.out.println(e);
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
              // TODO add your handling code here:
              int no=Integer.parseInt(txtInvoice.getText());
              createPdf(FILE,no);
          } catch (DocumentException ex) {
              Logger.getLogger(FrmZoneRate1.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Disable();
        FillClients1();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Enable();
        FillClients();
        FillWeightGroup();
        FillCountry();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(!cmbClient.getSelectedItem().toString().contains("select"))
        {
       String client=cmbClient.getSelectedItem().toString();
       int clientId=getClientID(client);
       Date jStartDate =  (Date) datePicker1.getModel().getValue() ; //your "java" date object
        java.sql.Date from = new java.sql.Date(jStartDate.getTime());
       Date jStartDate1 =  (Date) datePicker2.getModel().getValue() ; //your "java" date object
        java.sql.Date to = new java.sql.Date(jStartDate1.getTime());
        fillDailyEntry(clientId,from,to);
               }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model3=(DefaultTableModel)jTable1.getModel();
        int selectedRow=jTable1.getSelectedRow();
        String client="";
        int id=Integer.parseInt(model3.getValueAt(selectedRow,8).toString());
        String zoneId=model3.getValueAt(selectedRow,0).toString();
         Date jStartDate =  (Date) datePicker1.getModel().getValue() ; //your "java" date object
        java.sql.Date date = new java.sql.Date(jStartDate.getTime());
        try
        {
        Connection con=OracleConnection.getConnection();
        Statement stmt=con.createStatement();   
        ResultSet rs=stmt.executeQuery("select firmname from Client where clientid="+id+""); 
   
     if(rs.next())
     {
     client=rs.getString("firmname");
     }
        }
        catch(Exception e)
        {
        System.out.println(e);
        }
       
      try
      {
       Connection con=OracleConnection.getConnection();
       Statement stmt=con.createStatement();
       ResultSet rs=stmt.executeQuery("select ratedate from dailyentry where dailyentryid='"+zoneId+"'");
       if(rs.next())
       {
       date = rs.getDate("ratedate");
       }
          model.setValue(date);
//datePicker.setValue(deadlineDatePrompt.toLocalDate());
      }
      catch(Exception e)
      {
      System.out.println(e);
      }
        cmbClientName.setSelectedItem(client);
        cmbWeightGrp.setSelectedItem(model3.getValueAt(selectedRow,9).toString());
        txtAWB.setText(model3.getValueAt(selectedRow,1).toString());
        txtForAWB.setText(model3.getValueAt(selectedRow,2).toString());
        cmbThru.setSelectedItem(model3.getValueAt(selectedRow,3).toString());
        cmbCountry.setSelectedItem(model3.getValueAt(selectedRow,4).toString());
        txtZone.setText(model3.getValueAt(selectedRow,5).toString());
        txtTotWeight.setText(model3.getValueAt(selectedRow,6).toString());
        txtPcs.setText(model3.getValueAt(selectedRow,7).toString());
        txtRateWeightGrp.setText(model3.getValueAt(selectedRow,10).toString());
        txtAmount.setText(model3.getValueAt(selectedRow,11).toString());
        txtConsignee2.setText(model3.getValueAt(selectedRow,12).toString());
        txtFuelDHL.setText("0");
        txtFuelFED.setText("0");
        txtFuelLNX.setText("0");
        txtOther.setText("0");
        txtFuelUPS.setText("0");
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtHrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHrateActionPerformed
        // TODO add your handling code here:
        int rate=Integer.parseInt(txtHrate.getText());
        int amount=Integer.parseInt(txtTotAmount.getText());
         int Hamount=rate*amount/100;
        txtHamt.setText(String.valueOf(Hamount));
    }//GEN-LAST:event_txtHrateActionPerformed

    private void txtCrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCrateActionPerformed
        // TODO add your handling code here:
         int rate=Integer.parseInt(txtCrate.getText());
        int amount=Integer.parseInt(txtTotAmount.getText());
        int Camount=rate*amount/100;
        txtCamt.setText(String.valueOf(Camount));
    }//GEN-LAST:event_txtCrateActionPerformed

    private void txtIrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIrateActionPerformed
        // TODO add your handling code here:
         int rate=Integer.parseInt(txtIrate.getText());
        int amount=Integer.parseInt(txtTotAmount.getText());
        int Iamount=rate*amount/100;
        txtIamt.setText(String.valueOf(Iamount));
    }//GEN-LAST:event_txtIrateActionPerformed

    private void txtInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInvoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInvoiceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbClient;
    private javax.swing.JComboBox<String> cmbClientName;
    private javax.swing.JComboBox<String> cmbCountry;
    private javax.swing.JComboBox<String> cmbThru;
    private javax.swing.JComboBox<String> cmbWeightGrp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtAWB;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCamt;
    private javax.swing.JTextField txtConsignee2;
    private javax.swing.JTextField txtCrate;
    private javax.swing.JTextField txtForAWB;
    private javax.swing.JTextField txtFuelDHL;
    private javax.swing.JTextField txtFuelFED;
    private javax.swing.JTextField txtFuelLNX;
    private javax.swing.JTextField txtFuelUPS;
    private javax.swing.JTextField txtHamt;
    private javax.swing.JTextField txtHrate;
    private javax.swing.JTextField txtIamt;
    private javax.swing.JTextField txtInvoice;
    private javax.swing.JTextField txtIrate;
    private javax.swing.JTextField txtOther;
    private javax.swing.JTextField txtPAmount;
    private javax.swing.JTextField txtPcs;
    private javax.swing.JTextField txtRateWeightGrp;
    private javax.swing.JTextField txtTotAmount;
    private javax.swing.JTextField txtTotWeight;
    private javax.swing.JTextField txtZone;
    // End of variables declaration//GEN-END:variables
}
